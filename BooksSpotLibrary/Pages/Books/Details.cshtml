@page "{id:Guid}"
@using BooksSpotLibrary.Constants
@model BooksSpotLibrary.Pages.Books.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.DateAdded)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.DateAdded)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Author)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Author)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Category)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Publisher)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Publisher)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.PublishingDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.PublishingDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.ISBNCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.ISBNCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Status)
        </dd>

        @if (User.IsInRole(RoleNames.LibrarianRole))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.Borrower)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Book.Borrower)
            </dd>
        }

        @if (Model.Book.Status == Constants.UIConstants.Status[0] && (await AuthorizationService.AuthorizeAsync(
                                                          User, Model.Book,
                                                          OperationNames.Reserve)).Succeeded)
        {
            <form method="post">
                <input asp-for="WantToReserve" />
                <input type="submit" value = "Reserve")/>
            </form>

        }

        @if (Model.Book.Status == Constants.UIConstants.Status[0] && (await AuthorizationService.AuthorizeAsync(
                                                        User, Model.Book,
                                                        OperationNames.Borrow)).Succeeded)
        {
            <form method="post">
                <input asp-for="WantToBorrow" />
                <input type="submit" value = "Borrow")/>
            </form>
        }

        @if (Model.Book.Status == Constants.UIConstants.Status[1] && (await AuthorizationService.AuthorizeAsync(
                                                       User, Model.Book,
                                                       OperationNames.Return)).Succeeded)
        {
            <form method="post">
                    <input asp-for="WantToReturn" />
                    <input type="submit" value = "Return the Book")/>
            </form>
        }

        @if (Model.Book.Status == Constants.UIConstants.Status[2] && (await AuthorizationService.AuthorizeAsync(
                                                      User, Model.Book,
                                                     OperationNames.CancelReservation)).Succeeded)
        {
            <form method="post">
                    <input asp-for="WantToCancelReservation" />
                    <input type="submit" value = "Cancel the Reservation")/>
            </form>
        }

        @if (Model.Book.Status == Constants.UIConstants.Status[2] 
        && (await AuthorizationService.AuthorizeAsync(User, Model.Book,
                                                   OperationNames.Borrow)).Succeeded
        && (await AuthorizationService.AuthorizeAsync(User, Model.Book,
                                                    OperationNames.CancelReservation)).Succeeded)
        {
            <form method="post">
                <input asp-for="WantToBorrow" />
                <input type="submit" value = "Borrow")/>
            </form>
        }
    </dl>
</div>

<div>
    @if ((await AuthorizationService.AuthorizeAsync(
                   User, Model.Book,
                   OperationNames.Update)).Succeeded)
    {
                <a asp-page="./Edit" asp-route-id="@Model.Book?.Id">Edit</a>
    }

    <a asp-page="./Index">Back to List</a>
</div>
